<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Analysis Detail</title>
  <!-- Include Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com?plugins=typography"></script>
</head>
<body class="bg-gray-100 text-gray-800">

  <div class="container mx-auto my-8">
    <h1 class="text-3xl font-bold text-center mb-6">Edit Analysis Detail</h1>

    <!-- Form to edit analysis details -->
    <form id="edit-analysis-form" class="bg-white p-6 shadow-md rounded-lg">
      <!-- Title Field -->
      <div class="mb-4">
        <label for="title" class="block text-sm font-bold mb-2">Title:</label>
        <input 
          type="text" 
          id="title" 
          name="title" 
          value="<%= analysis.title || '' %>" 
          class="w-full border border-gray-300 rounded p-2"
          placeholder="Enter title"
          required
        />
      </div>

      <!-- User ID Field (Hidden) -->
      <input 
        type="hidden" 
        id="userId" 
        name="userId" 
        value="<%= analysis.user._id %>" 
      />

      <!-- User Name Field -->
      <div class="mb-4">
        <label for="userEmail" class="block text-sm font-bold mb-2">User Name:</label>
        <input 
          type="email" 
          id="userEmail" 
          name="userEmail" 
          value="<%= analysis.user.email %>" 
          class="w-full border border-gray-300 rounded p-2"
          placeholder="Enter user email"
          readonly
        />
      </div>

      <!-- EAN Field -->
      <div class="mb-4">
        <label for="ean" class="block text-sm font-bold mb-2">EAN:</label>
        <input 
          type="text" 
          id="ean" 
          name="ean" 
          value="<%= analysis.ean %>" 
          class="w-full border border-gray-300 rounded p-2"
          placeholder="Enter EAN"
          required
        />
      </div>

      <!-- Text Field -->
      <div class="mb-4">
        <label for="text" class="block text-sm font-bold mb-2">Text:</label>
        <textarea 
          id="text" 
          name="text" 
          rows="4"
          class="w-full border border-gray-300 rounded p-2"
          placeholder="Enter text"
          required
        ><%= analysis.text %></textarea>
      </div>

      <!-- Analysis Field -->
      <div class="mb-4">
        <label for="analysisContent" class="block text-sm font-bold mb-2">Analysis:</label>
        <textarea 
          id="analysisContent" 
          name="analysisContent" 
          rows="6"
          class="w-full border border-gray-300 rounded p-2"
        ><%= analysis.analysis %></textarea>
      </div>

      <!-- Submit Button -->
      <button type="submit" 
              class="mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
        Save Changes
      </button>

      <!-- Back Button -->
      <a href="/analyses" 
         class="mt-4 inline-block bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
        Back to List
      </a>
    </form>

  </div>

  <!-- JavaScript to handle form submission using Fetch API -->
  <script>
    document.getElementById('edit-analysis-form').addEventListener('submit', async function(event) {
      event.preventDefault(); // Prevent default form submission

      // Collect form data
      const title = document.getElementById('title').value;
      const userId = document.getElementById('userId').value;
      const ean = document.getElementById('ean').value;
      const text = document.getElementById('text').value;
      const analysisContent = document.getElementById('analysisContent').value;

      // Prepare data to send
      const data = {
        title,
        userId,
        ean,
        text,
        analysis: analysisContent // Parse analysis content back into an object
      };

      try {
        // Send POST request using Fetch API
        const response = await fetch('/save-analysis', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });

        if (!response.ok) {
          // Handle HTTP errors
          const errorData = await response.json();
          alert(`Error: ${errorData.message}`);
          return;
        }

        // Handle success response
        const result = await response.json();
        alert(result.message);
        
        // Optionally redirect or update UI after success
        window.location.href = '/analyses';
        
      } catch (error) {
        console.error('Error submitting form:', error);
        alert('An error occurred while saving the analysis.');
      }
    });
  </script>

</body>
</html>
