<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Analysis</title>
    <script src="https://cdn.tailwindcss.com?plugins=typography"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50 p-4">
    <div class="max-w-4xl mx-auto bg-white rounded-lg shadow p-6">
        <input type="file" id="imageInput" accept="image/*" capture="environment" class="hidden">
        <div class="flex gap-4">
            <button onclick="document.getElementById('imageInput').click()" 
                    class="bg-blue-500 text-white px-6 py-2 rounded-lg">
                Select Image
            </button>
            <button onclick="startCamera()" 
                    class="bg-purple-500 text-white px-6 py-2 rounded-lg">
                Open Camera
            </button>
        </div>

        <div id="cameraContainer" class="mt-4 hidden">
            <video id="video" class="max-w-full" autoplay playsinline></video>
            <button onclick="captureImage()" 
                    class="mt-4 bg-red-500 text-white px-6 py-2 rounded-lg">
                Capture
            </button>
        </div>

        <div id="cropperContainer" class="mt-4 hidden">
            <img id="image" class="max-w-full">
            <button onclick="analyzeCroppedImage()" 
                    class="mt-4 bg-green-500 text-white px-6 py-2 rounded-lg">
                Analyze
            </button>
        </div>

        <div id="loadingSpinner" class="hidden mt-4">
            <div class="flex items-center justify-center">
                <div class="animate-spin rounded-full h-10 w-10 border-b-2 border-blue-500"></div>
                <span class="ml-2">Processing image...</span>
            </div>
        </div>

        <div id="results" class="mt-4 prose"></div>
    </div>

    <script>
        let cropper;
        let stream;
        let video;

        marked.setOptions({
            breaks: true,
            gfm: true
        });

        async function startCamera() {
            try {
                stream = await navigator.mediaDevices.getUserMedia({ 
                    video: { facingMode: 'environment' }
                });
                video = document.getElementById('video');
                video.srcObject = stream;
                document.getElementById('cameraContainer').classList.remove('hidden');
                document.getElementById('cropperContainer').classList.add('hidden');
            } catch (err) {
                console.error('Error accessing camera:', err);
                alert('Unable to access camera. Please ensure you have granted camera permissions.');
            }
        }

        function captureImage() {
            const canvas = document.createElement('canvas');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            canvas.getContext('2d').drawImage(video, 0, 0);
            
            const image = document.getElementById('image');
            image.src = canvas.toDataURL('image/jpeg');
            
            // Stop camera stream
            stream.getTracks().forEach(track => track.stop());
            document.getElementById('cameraContainer').classList.add('hidden');
            
            // Show and initialize cropper
            document.getElementById('cropperContainer').classList.remove('hidden');
            if (cropper) {
                cropper.destroy();
            }
            initializeCropper();
        }

        function initializeCropper() {
            cropper = new Cropper(document.getElementById('image'), {
                aspectRatio: NaN,
                viewMode: 1,
                dragMode: 'move',
                autoCropArea: 1,
                restore: false,
                modal: true,
                guides: true,
                highlight: true,
                cropBoxMovable: true,
                cropBoxResizable: true,
                toggleDragModeOnDblclick: true
            });
        }

        document.getElementById('imageInput').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const image = document.getElementById('image');
                    image.src = e.target.result;
                    document.getElementById('cropperContainer').classList.remove('hidden');
                    document.getElementById('cameraContainer').classList.add('hidden');
                    
                    if (cropper) {
                        cropper.destroy();
                    }
                    initializeCropper();
                };
                reader.readAsDataURL(file);
            }
        });

        function analyzeCroppedImage() {
            const loadingSpinner = document.getElementById('loadingSpinner');
            loadingSpinner.classList.remove('hidden');
            
            const canvas = cropper.getCroppedCanvas();
            canvas.toBlob((blob) => {
                const formData = new FormData();
                formData.append('image', blob);

                fetch('/process-image', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    loadingSpinner.classList.add('hidden');
                    document.getElementById('results').innerHTML = JSON.stringify(data.detectedText);
                })
                .catch(error => {
                    loadingSpinner.classList.add('hidden');
                    console.error('Error:', error);
                    document.getElementById('results').innerHTML = 
                        '<div class="text-red-500">Error processing image. Please try again.</div>';
                });
            });
        }
    </script>
</body>
</html>
