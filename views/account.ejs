<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PureInsight - Account</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/feather-icons"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Parkinsans:wght@300..800&display=swap');
        * {
            font-family: "Parkinsans";
        }
    </style>
    <!-- Add after the existing head content -->
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

</head>
<body class="bg-white max-w-screen-xl mx-auto px-4 sm:px-8 py-6">

    <%- include('partials/nav') %>

    <div class="h-96 mt-32 flex items-center justify-center">

        <div class="bg-white px-4 rounded-lg w-full max-w-md">
            <!-- Toggle Buttons -->
            <div class="flex mb-8 bg-gray-100 p-1 rounded">
                <button id="signInBtn" class="w-1/2 py-2 text-center rounded bg-green-700 text-white">Sign In</button>
                <button id="signUpBtn" class="w-1/2 py-2 text-center rounded text-gray-600">Sign Up</button>
            </div>

            <!-- Sign In Form -->
            <div id="signInForm">
                <form class="space-y-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                        <input type="email" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" required>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                        <input type="password" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" required>
                    </div>
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <input type="checkbox" class="h-4 w-4 text-green-700 focus:ring-green-500 border-gray-300 rounded">
                            <label class="ml-2 block text-sm text-gray-700">Remember me</label>
                        </div>
                        <a href="#" class="text-sm text-green-700 hover:text-green-800">Forgot password?</a>
                    </div>
                    <button type="submit" class="w-full bg-green-700 text-white py-2 px-4 rounded-md hover:bg-green-800 transition-colors">Sign In</button>
                </form>
            </div>

            <!-- Sign Up Form -->
            <div id="signUpForm" class="hidden">
                <form class="space-y-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                        <input type="email" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" required>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Password</label>
                        <input type="password" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" required>
                    </div>
                    <div class="flex items-center">
                        <input type="checkbox" class="h-4 w-4 text-green-700 focus:ring-green-500 border-gray-300 rounded" required>
                        <label class="ml-2 block text-sm text-gray-700">
                            I agree to the 
                            <a href="#" class="text-green-700 hover:text-green-800">Terms</a>
                            and
                            <a href="#" class="text-green-700 hover:text-green-800">Privacy Policy</a>
                        </label>
                    </div>
                    <button type="submit" class="w-full bg-green-700 text-white py-2 px-4 rounded-md hover:bg-green-800 transition-colors">Sign Up</button>
                </form>
            </div>
        </div>
    </div>

    <script>

        const signInBtn = document.getElementById('signInBtn');
        const signUpBtn = document.getElementById('signUpBtn');
        const signInForm = document.getElementById('signInForm').querySelector('form');
        const signUpForm = document.getElementById('signUpForm').querySelector('form');
    
        // Toast notification function
        const showToast = (message, isError = false) => {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                stopOnFocus: true,
                style: {
                    background: isError ? "#b91c1c" : "#15803d",
                    borderRadius: "2px",
                    padding: "12px 24px",
                }
            }).showToast();
        };
    
        // Toggle form visibility
        signInBtn.addEventListener('click', () => {
            signInBtn.classList.add('bg-green-700', 'text-white');
            signInBtn.classList.remove('bg-transparent', 'text-gray-600');
            signUpBtn.classList.remove('bg-green-700', 'text-white');
            signUpBtn.classList.add('bg-transparent', 'text-gray-600');
            signInForm.parentElement.classList.remove('hidden');
            signUpForm.parentElement.classList.add('hidden');
        });
    
        signUpBtn.addEventListener('click', () => {
            signUpBtn.classList.add('bg-green-700', 'text-white');
            signUpBtn.classList.remove('bg-transparent', 'text-gray-600');
            signInBtn.classList.remove('bg-green-700', 'text-white');
            signInBtn.classList.add('bg-transparent', 'text-gray-600');
            signUpForm.parentElement.classList.remove('hidden');
            signInForm.parentElement.classList.add('hidden');
        });
    
        // Handle form submissions
        signInForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = signInForm.querySelector('input[type="email"]').value;
            const password = signInForm.querySelector('input[type="password"]').value;
    
            try {
                const response = await fetch('/auth/signin', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });
    
                const data = await response.json();
                
                if (data.success) {
                    showToast('Login successful! Redirecting...');
                    setTimeout(() => {
                        window.location.href = '/scan';
                    }, 1000);
                } else {
                    showToast(data.message || 'Login failed', true);
                }
            } catch (error) {
                showToast('An error occurred during login', true);
            }
        });
    
        signUpForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = signUpForm.querySelector('input[type="email"]').value;
            const password = signUpForm.querySelector('input[type="password"]').value;
    
            try {
                const response = await fetch('/auth/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, email, password })
                });
    
                const data = await response.json();
                
                if (data.success) {
                    showToast('Registration successful! Redirecting...');
                    setTimeout(() => {
                        window.location.href = '/signin';
                    }, 1000);
                } else {
                    showToast(data.message || 'Registration failed', true);
                }
            } catch (error) {
                showToast('An error occurred during registration', true);
            }
        });
    
        // Add loading state to buttons
        const addLoadingState = (form) => {
            const button = form.querySelector('button[type="submit"]');
            button.disabled = true;
            button.innerHTML = `
                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Processing...
            `;
        };
    
        const removeLoadingState = (form, text) => {
            const button = form.querySelector('button[type="submit"]');
            button.disabled = false;
            button.textContent = text;
        };
    
        // Add loading state to form submissions
        signInForm.addEventListener('submit', () => addLoadingState(signInForm));
        signUpForm.addEventListener('submit', () => addLoadingState(signUpForm));
    </script>    
    <script src="/js/common.js"></script>
    
</body>
</html>
